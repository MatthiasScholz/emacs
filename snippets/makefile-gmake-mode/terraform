# -*- mode: snippet -*-
# name: Makefile Terraform
# key: init_terraform
# expand-env: ((yas-indent-line nil))
# --
# Makefile for executing terraform including validation steps.
#
# An external tool for additional validation is used 'tflint' ( https://github.com/terraform-linters/tflint ). On MacOSX system it can be installed via 'install_macosx'.
AWS_PROFILE	?= ${1:default}

region := eu-west-1
role := homeserver

# Only internally used variable
INFRA_PLAN = infrastructure.plan
PATH_MODULES = ${2:"../../modules/"}

define access
       \$(eval input=$(1))
       AWS_REGION=$(region) aws-vault exec $(role) -- $(input)
endef

define tf
       \$(eval input=$(1))
       tfswitch
       \$(call access, terraform $(input))
endef


all: init validate apply test$3

install_macosx:
	brew install tflint
  brew install tfswitch

init:
	\$(info "[INFO] Initializing terraform")
	\$(call tf, init)

validate:
	\$(info "[INFO] Validating terraform")
	\$(info "[INFO] .Validating main")
  \$(call tf, validate)
  \$(call tf, fmt -write=false)
	\$(info "[INFO] .Validating modules")
  # TODO: Terraform supports directories now
	cd "$(PATH_MODULES)" && \$(call tf, fmt -write=false -recursive)
	\$(info "[INFO] .Linting")
	@tflint .
	@tflint --module .

# Deep validation step
# .invokes the provider's API to do a more detailed inspection
# .SEE: https://github.com/terraform-linters/tflint/blob/master/docs/guides/advanced.md#deep-checking
validate_deep:
	$(call echoinfo, "[INFO] .Linting - deep scan")
	@tflint --deep .
	@tflint --deep --module .

plan: validate
	\$(info "[INFO] Planing infrastructure")
  \$(call tf, plan -var "deploy_profile=$(AWS_PROFILE)" -out="$(INFRA_PLAN)")

apply: plan
	\$(info "[INFO] Apply infrastructure")
  \$(call tf, apply "$(INFRA_PLAN)")

destroy:
	\$(warn "[INFO] DESTROYING infrastructure")
  \$(call tf, destroy)

test:
	\$(info "[INFO] Test infrastructure")
	@echo "TODO :: test still needs to be written."
