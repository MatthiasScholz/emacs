# -*- mode: snippet -*-
# name: init
# key: init
# --
#!/usr/bin/env python3

"""
$8
"""

__version__="`(format-time-string "%Y-%m-%d")`"

import argparse
import os
import subprocess
import sys
import time
import logging

# The default level is WARNING
logging.basicConfig(format='%(asctime)s - %(levelname)s :: %(message)s')
loglevel = "info"  # Default log level


def $5():
    """
    $6
    """
    $0
    return False


def setLogLevel(loglevel="info"):
    # Configure logging
    numeric_lvl = getattr(logging, loglevel.upper(), None)
    logging.getLogger().setLevel(level=numeric_lvl)
    # Update global verbosity state
    loglevel = loglevel


if __name__ == "__main__":
    # execute only if run as a script
    parser = argparse.ArgumentParser()
    # Default parameter
    parser.add_argument(
        "-l",
        "--loglevel",
        help="Setting the log level.",
        choices=["debug", "info", "warn", "error", "fatal", "critical"],
        default="info")

    # -------------------------------
    # CLI commands and parameter
    parser.add_argument("-$1", "--$2",
                        help="$3")

    # Set the function which should be executed
    parser.set_defaults(func=$5)

    # -------------------------------
    # Parsing the given cli parameter
    args = parser.parse_args()

    # Configure Logging
    setLogLevel(args.loglevel)

    # Execute CLI command
    if not args.func(args):
        sys.exit(1)